name = "Pure Mathematics with Lean"
version = "1.3.0"
extra_files = "extras"
intro = "src/game/intro.lean"

[[worlds]]
name = "Equations"
id = 1
levels = [
	"src/equations/refl.lean",
	"src/equations/commutativity_rw.lean",
	"src/equations/rw_with_local_hypotheses.lean",
	"src/equations/focussed_rewriting.lean",
	"src/equations/associativity.lean",
	"src/equations/structured_proofs.lean",
	"src/equations/multiple_rewrites.lean",
	"src/equations/backward_rewrite.lean",
	"src/equations/additive_identity.lean",
	"src/equations/universal_statements.lean",
	"src/equations/unique_additive_identity.lean",
	"src/equations/additive_inverse.lean",
	"src/equations/cancellation_i.lean",
	"src/equations/unique_additive_inverse.lean",
	"src/equations/simplifier.lean",
	"src/equations/algebraic_structures.lean",
]

[[worlds]]
name = "Logic (And)"
id = 2
levels = [
	"src/logic_and_proof_and/from.lean",
	"src/logic_and_proof_and/decomposing_and.lean",
	"src/logic_and_proof_and/and_elimination.lean",
	"src/logic_and_proof_and/propositions.lean",
	"src/logic_and_proof_and/decomposing_and2.lean",
	"src/logic_and_proof_and/have.lean",
	"src/logic_and_proof_and/split.lean",
	"src/logic_and_proof_and/and_introduction.lean",
	"src/logic_and_proof_and/apply_wildcards.lean",
	"src/logic_and_proof_and/and_summary.lean",
]

[[worlds]]
name = "Logic (Or)"
id = 3
parents = [2]
levels = [
	"src/logic_and_proof_or/left_right_or_intro.lean",
	"src/logic_and_proof_or/nested_or.lean",
	"src/logic_and_proof_or/backward_or_intro.lean",
	"src/logic_and_proof_or/decomposing_or.lean",
	"src/logic_and_proof_or/implication.lean",
	"src/logic_and_proof_or/or_elim.lean",
	"src/logic_and_proof_or/or_summary.lean",
]

[[worlds]]
name = "Variables"
id = 4
parents = [3]
levels = [
	"src/variables/introduction.lean",
	"src/variables/forall_introduction.lean",
	"src/variables/use.lean",
	"src/variables/exists_introduction.lean",
	"src/variables/exists_elimination_cases.lean",
	"src/variables/predicates.lean",
]

[[worlds]]
name = "Groups"
id = 5
parents = [4]
levels = [
	"src/group/inv_inv.lean",
	"src/group/mul_right_inv",
]

[[worlds]]
name = "Strong Induction"
id = 6
parents = [1, 4]
levels = [
	"src/strong_induction/introduction.lean",
	"src/strong_induction/different_base_case.lean",
	"src/strong_induction/minimal_element.lean",
	"src/strong_induction/well_ordering_principle.lean",
]

[[worlds]]
name = "Divisibility"
id = 7
parents = [6]
levels = [
	"src/divisibility/dvd_definition.lean",
	"src/divisibility/dvd_refl.lean",
	"src/divisibility/dvd_zero.lean",
	"src/divisibility/dvd_mul_of_dvd_left.lean",
	"src/divisibility/zero_dvd_iff.lean",
	"src/divisibility/mul_dvd_mul.lean",
	"src/divisibility/dvd_mul_add_mul.lean",
	"src/divisibility/dvd_trans.lean",
	"src/divisibility/dvd_antisymm.lean",
	"src/divisibility/common_divisors.lean",
	"src/divisibility/common_divisors2.lean",
	"src/divisibility/gcd_uniqueness.lean",
	"src/divisibility/gcd_zero.lean",
	"src/divisibility/gcd_comm.lean",
	"src/divisibility/division.lean",
	"src/divisibility/non_division.lean",
	"src/divisibility/bezout.lean",
	"src/divisibility/gcd_neg.lean",
	"src/divisibility/bezout2.lean",
	"src/divisibility/euclid_basic.lean",
	"src/divisibility/euclidean_algorithm.lean",
]


[[worlds]]
name = "Congruences"
id = 8
parents = [7]
levels = [
	"src/congruences/mod_def.lean",
	"src/congruences/reduction1.lean",
	"src/congruences/mod_refl_symm.lean",
	"src/congruences/mod_trans.lean",
	"src/congruences/modeq_zero_iff.lean",
	"src/congruences/mod_mul_right.lean",
	"src/congruences/mod_add.lean",
	"src/congruences/mod_mul.lean",
	"src/congruences/mod_reduction.lean",
	"src/congruences/reduction2.lean",
	"src/congruences/condition_for_linear_congruence.lean",
	"src/congruences/linear_congruences_no_soln.lean",
	"src/congruences/solving_a_linear_congruence.lean",
]

